/*
 * This file was automatically generated by SmartUnit
 */

package smartunit.org.nanohttpd.webserver;

import org.junit.Test;
import static org.junit.Assert.*;
import java.lang.reflect.Method;
import static org.smartunit.shaded.org.mockito.Mockito.*;
import org.smartunit.shaded.org.mockito.ArgumentMatchers;
import java.util.HashMap;
import java.util.Map;
import org.junit.runner.RunWith;
import org.nanohttpd.webserver.InternalRewrite;
import org.smartunit.runtime.ExecutorServiceAnswer;
import org.smartunit.runtime.SmartRunner;
import org.smartunit.runtime.SmartRunnerParameters;
import org.smartunit.runtime.TransactionTemplateAnswer;
import org.smartunit.runtime.ViolatedAssumptionAnswer;

@RunWith(SmartRunner.class) @SmartRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class InternalRewrite_SSTest extends InternalRewrite_SSTest_scaffolding {

  @Test(timeout = 4000)
  public void test_getHeaders_0()  throws Throwable  {
      //caseID:d4b591ed2de7b947fc2d73461264f95b
      Map<String, String> map0 = (Map<String, String>) mock(Map.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      doReturn("4").when(map0).toString();
      InternalRewrite internalRewrite0 = new InternalRewrite(map0, "text/html");
      Map<String, String> map1 = internalRewrite0.getHeaders();
      assertSame(map1, map0);
  }
  @Test(timeout = 4000)
  public void test_getHeaders_1()  throws Throwable  {
      //caseID:01d23d2f243481db47ca9b24a7ca6379
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      InternalRewrite internalRewrite0 = new InternalRewrite(hashMap0, "1.0");
      Map<String, String> map0 = internalRewrite0.getHeaders();
      assertEquals(0, map0.size());
  }
  @Test(timeout = 4000)
  public void test_getUri_2()  throws Throwable  {
      //caseID:16c07f84db195dcabced60c2dd6f3630
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      InternalRewrite internalRewrite0 = new InternalRewrite(hashMap0, "9");
      String string0 = internalRewrite0.getUri();
      assertEquals("9", string0);
  }}
